import cryptojs from 'crypto'
var crypto = cryptojs.webcrypto;

function stringDecodeUTF8(string) {
    var uintindex;
    var encodedstring = unescape(encodeURIComponent(string));
    var string_bytes = new Uint8Array(string.length);

    for (uintindex = 0; uintindex < encodedstring.length; uintindex++)
        string_bytes[uintindex] = encodedstring.charCodeAt(uintindex);
    return string_bytes
}

function encodeBase64(string) {
    var char, arraychars = [], stringlen = string.length;
    for (char = 0; char < stringlen; char++)
        arraychars.push(String.fromCharCode(string[char]));
    return btoa(arraychars.join(''))
}

function b(a) {
    var b, c = new Float64Array(16);
    if (a)
        for (b = 0; b < a.length; b++) c[b] = a[b];
    return c
}

function b2(a, b, c) {
    var d = a[b] + a[c];
    c = a[b + 1] + a[c + 1];
    d >= 4294967296 && c++;
    a[b] = d;
    a[b + 1] = c;
}


var v_uint8_values = {
    "0": 101,
    "1": 120,
    "2": 112,
    "3": 97,
    "4": 110,
    "5": 100,
    "6": 32,
    "7": 51,
    "8": 50,
    "9": 45,
    "10": 98,
    "11": 121,
    "12": 116,
    "13": 101,
    "14": 32,
    "15": 107
}

var v = new Uint8Array([...Object.values(v_uint8_values)]);

function A(a) {
    this.buffer = new Uint8Array(16);
    this.r = new Uint16Array(10);
    this.h = new Uint16Array(10);
    this.pad = new Uint16Array(8);
    this.leftover = 0;
    this.fin = 0;
    var b, c;
    b = a[0] & 255 | (a[1] & 255) << 8;
    this.r[0] = b & 8191;
    c = a[2] & 255 | (a[3] & 255) << 8;
    this.r[1] = (b >>> 13 | c << 3) & 8191;
    b = a[4] & 255 | (a[5] & 255) << 8;
    this.r[2] = (c >>> 10 | b << 6) & 7939;
    c = a[6] & 255 | (a[7] & 255) << 8;
    this.r[3] = (b >>> 7 | c << 9) & 8191;
    b = a[8] & 255 | (a[9] & 255) << 8;
    this.r[4] = (c >>> 4 | b << 12) & 255;
    this.r[5] = b >>> 1 & 8190;
    c = a[10] & 255 | (a[11] & 255) << 8;
    this.r[6] = (b >>> 14 | c << 2) & 8191;
    b = a[12] & 255 | (a[13] & 255) << 8;
    this.r[7] = (c >>> 11 | b << 5) & 8065;
    c = a[14] & 255 | (a[15] & 255) << 8;
    this.r[8] = (b >>> 8 | c << 8) & 8191;
    this.r[9] = c >>> 5 & 127;
    this.pad[0] = a[16] & 255 | (a[17] & 255) << 8;
    this.pad[1] = a[18] & 255 | (a[19] & 255) << 8;
    this.pad[2] = a[20] & 255 | (a[21] & 255) << 8;
    this.pad[3] = a[22] & 255 | (a[23] & 255) << 8;
    this.pad[4] = a[24] & 255 | (a[25] & 255) << 8;
    this.pad[5] = a[26] & 255 | (a[27] & 255) << 8;
    this.pad[6] = a[28] & 255 | (a[29] & 255) << 8;
    this.pad[7] = a[30] & 255 | (a[31] & 255) << 8
}

A.prototype.update = function(a, b, c) {
    var d, e;
    if (this.leftover) {
        e = 16 - this.leftover;
        e > c && (e = c);
        for (d = 0; d < e; d++) this.buffer[this.leftover + d] = a[b + d];
        c -= e;
        b += e;
        this.leftover += e;
        if (this.leftover < 16) return;
        this.blocks(this.buffer, 0, 16);
        this.leftover = 0
    }
    c >= 16 && (e = c - c % 16, this.blocks(a, b, e), b += e, c -= e);
    if (c) {
        for (d = 0; d < c; d++) this.buffer[this.leftover + d] = a[b + d];
        this.leftover += c
    }
}

A.prototype.finish = function(a, b) {
    var c = new Uint16Array(10),
        d, e;
    if (this.leftover) {
        e = this.leftover;
        this.buffer[e++] = 1;
        for (; e < 16; e++) this.buffer[e] = 0;
        this.fin = 1;
        this.blocks(this.buffer, 0, 16)
    }
    d = this.h[1] >>> 13;
    this.h[1] &= 8191;
    for (e = 2; e < 10; e++) this.h[e] += d, d = this.h[e] >>> 13, this.h[e] &= 8191;
    this.h[0] += d * 5;
    d = this.h[0] >>> 13;
    this.h[0] &= 8191;
    this.h[1] += d;
    d = this.h[1] >>> 13;
    this.h[1] &= 8191;
    this.h[2] += d;
    c[0] = this.h[0] + 5;
    d = c[0] >>> 13;
    c[0] &= 8191;
    for (e = 1; e < 10; e++) c[e] = this.h[e] + d, d = c[e] >>> 13, c[e] &= 8191;
    c[9] -= 1 << 13;
    d = (d ^ 1) - 1;
    for (e = 0; e < 10; e++) c[e] &= d;
    d = ~d;
    for (e = 0; e < 10; e++) this.h[e] = this.h[e] & d | c[e];
    this.h[0] = (this.h[0] | this.h[1] << 13) & 65535;
    this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 65535;
    this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 65535;
    this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 65535;
    this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 65535;
    this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 65535;
    this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 65535;
    this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 65535;
    c = this.h[0] + this.pad[0];
    this.h[0] = c & 65535;
    for (e = 1; e < 8; e++) c = (this.h[e] + this.pad[e] | 0) + (c >>> 16) | 0, this.h[e] = c & 65535;
    a[b + 0] = this.h[0] >>> 0 & 255;
    a[b + 1] = this.h[0] >>> 8 & 255;
    a[b + 2] = this.h[1] >>> 0 & 255;
    a[b + 3] = this.h[1] >>> 8 & 255;
    a[b + 4] = this.h[2] >>> 0 & 255;
    a[b + 5] = this.h[2] >>> 8 & 255;
    a[b + 6] = this.h[3] >>> 0 & 255;
    a[b + 7] = this.h[3] >>> 8 & 255;
    a[b + 8] = this.h[4] >>> 0 & 255;
    a[b + 9] = this.h[4] >>> 8 & 255;
    a[b + 10] = this.h[5] >>> 0 & 255;
    a[b + 11] = this.h[5] >>> 8 & 255;
    a[b + 12] = this.h[6] >>> 0 & 255;
    a[b + 13] = this.h[6] >>> 8 & 255;
    a[b + 14] = this.h[7] >>> 0 & 255;
    a[b + 15] = this.h[7] >>> 8 & 255
}

A.prototype.blocks = function(a, b, c) {
    var d = this.fin ? 0 : 1 << 11,
        e, f, g, h, i, j, k, l, m, n, o, p = this.h[0],
        q = this.h[1],
        r = this.h[2],
        s = this.h[3],
        t = this.h[4],
        u = this.h[5],
        v = this.h[6],
        w = this.h[7],
        x = this.h[8],
        y = this.h[9],
        z = this.r[0],
        A = this.r[1],
        B = this.r[2],
        C = this.r[3],
        D = this.r[4],
        E = this.r[5],
        F = this.r[6],
        G = this.r[7],
        H = this.r[8],
        I = this.r[9];
    while (c >= 16) e = a[b + 0] & 255 | (a[b + 1] & 255) << 8, p += e & 8191, f = a[b + 2] & 255 | (a[b + 3] & 255) << 8, q += (e >>> 13 | f << 3) & 8191, e = a[b + 4] & 255 | (a[b + 5] & 255) << 8, r += (f >>> 10 | e << 6) & 8191, f = a[b + 6] & 255 | (a[b + 7] & 255) << 8, s += (e >>> 7 | f << 9) & 8191, e = a[b + 8] & 255 | (a[b + 9] & 255) << 8, t += (f >>> 4 | e << 12) & 8191, u += e >>> 1 & 8191, f = a[b + 10] & 255 | (a[b + 11] & 255) << 8, v += (e >>> 14 | f << 2) & 8191, e = a[b + 12] & 255 | (a[b + 13] & 255) << 8, w += (f >>> 11 | e << 5) & 8191, f = a[b + 14] & 255 | (a[b + 15] & 255) << 8, x += (e >>> 8 | f << 8) & 8191, y += f >>> 5 | d, e = 0, f = e, f += p * z, f += q * (5 * I), f += r * (5 * H), f += s * (5 * G), f += t * (5 * F), e = f >>> 13, f &= 8191, f += u * (5 * E), f += v * (5 * D), f += w * (5 * C), f += x * (5 * B), f += y * (5 * A), e += f >>> 13, f &= 8191, g = e, g += p * A, g += q * z, g += r * (5 * I), g += s * (5 * H), g += t * (5 * G), e = g >>> 13, g &= 8191, g += u * (5 * F), g += v * (5 * E), g += w * (5 * D), g += x * (5 * C), g += y * (5 * B), e += g >>> 13, g &= 8191, h = e, h += p * B, h += q * A, h += r * z, h += s * (5 * I), h += t * (5 * H), e = h >>> 13, h &= 8191, h += u * (5 * G), h += v * (5 * F), h += w * (5 * E), h += x * (5 * D), h += y * (5 * C), e += h >>> 13, h &= 8191, i = e, i += p * C, i += q * B, i += r * A, i += s * z, i += t * (5 * I), e = i >>> 13, i &= 8191, i += u * (5 * H), i += v * (5 * G), i += w * (5 * F), i += x * (5 * E), i += y * (5 * D), e += i >>> 13, i &= 8191, j = e, j += p * D, j += q * C, j += r * B, j += s * A, j += t * z, e = j >>> 13, j &= 8191, j += u * (5 * I), j += v * (5 * H), j += w * (5 * G), j += x * (5 * F), j += y * (5 * E), e += j >>> 13, j &= 8191, k = e, k += p * E, k += q * D, k += r * C, k += s * B, k += t * A, e = k >>> 13, k &= 8191, k += u * z, k += v * (5 * I), k += w * (5 * H), k += x * (5 * G), k += y * (5 * F), e += k >>> 13, k &= 8191, l = e, l += p * F, l += q * E, l += r * D, l += s * C, l += t * B, e = l >>> 13, l &= 8191, l += u * A, l += v * z, l += w * (5 * I), l += x * (5 * H), l += y * (5 * G), e += l >>> 13, l &= 8191, m = e, m += p * G, m += q * F, m += r * E, m += s * D, m += t * C, e = m >>> 13, m &= 8191, m += u * B, m += v * A, m += w * z, m += x * (5 * I), m += y * (5 * H), e += m >>> 13, m &= 8191, n = e, n += p * H, n += q * G, n += r * F, n += s * E, n += t * D, e = n >>> 13, n &= 8191, n += u * C, n += v * B, n += w * A, n += x * z, n += y * (5 * I), e += n >>> 13, n &= 8191, o = e, o += p * I, o += q * H, o += r * G, o += s * F, o += t * E, e = o >>> 13, o &= 8191, o += u * D, o += v * C, o += w * B, o += x * A, o += y * z, e += o >>> 13, o &= 8191, e = (e << 2) + e | 0, e = e + f | 0, f = e & 8191, e = e >>> 13, g += e, p = f, q = g, r = h, s = i, t = j, u = k, v = l, w = m, x = n, y = o, b += 16, c -= 16;
    this.h[0] = p;
    this.h[1] = q;
    this.h[2] = r;
    this.h[3] = s;
    this.h[4] = t;
    this.h[5] = u;
    this.h[6] = v;
    this.h[7] = w;
    this.h[8] = x;
    this.h[9] = y
}

function r(a, b, c, d) {
    var e =
            (d[0] & 255) |
            ((d[1] & 255) << 8) |
            ((d[2] & 255) << 16) |
            ((d[3] & 255) << 24),
        f =
            (c[0] & 255) |
            ((c[1] & 255) << 8) |
            ((c[2] & 255) << 16) |
            ((c[3] & 255) << 24),
        g =
            (c[4] & 255) |
            ((c[5] & 255) << 8) |
            ((c[6] & 255) << 16) |
            ((c[7] & 255) << 24),
        h =
            (c[8] & 255) |
            ((c[9] & 255) << 8) |
            ((c[10] & 255) << 16) |
            ((c[11] & 255) << 24),
        i =
            (c[12] & 255) |
            ((c[13] & 255) << 8) |
            ((c[14] & 255) << 16) |
            ((c[15] & 255) << 24),
        j =
            (d[4] & 255) |
            ((d[5] & 255) << 8) |
            ((d[6] & 255) << 16) |
            ((d[7] & 255) << 24),
        k =
            (b[0] & 255) |
            ((b[1] & 255) << 8) |
            ((b[2] & 255) << 16) |
            ((b[3] & 255) << 24),
        l =
            (b[4] & 255) |
            ((b[5] & 255) << 8) |
            ((b[6] & 255) << 16) |
            ((b[7] & 255) << 24),
        m =
            (b[8] & 255) |
            ((b[9] & 255) << 8) |
            ((b[10] & 255) << 16) |
            ((b[11] & 255) << 24);
    b =
        (b[12] & 255) |
        ((b[13] & 255) << 8) |
        ((b[14] & 255) << 16) |
        ((b[15] & 255) << 24);
    var n =
            (d[8] & 255) |
            ((d[9] & 255) << 8) |
            ((d[10] & 255) << 16) |
            ((d[11] & 255) << 24),
        o =
            (c[16] & 255) |
            ((c[17] & 255) << 8) |
            ((c[18] & 255) << 16) |
            ((c[19] & 255) << 24),
        p =
            (c[20] & 255) |
            ((c[21] & 255) << 8) |
            ((c[22] & 255) << 16) |
            ((c[23] & 255) << 24),
        q =
            (c[24] & 255) |
            ((c[25] & 255) << 8) |
            ((c[26] & 255) << 16) |
            ((c[27] & 255) << 24);
    c =
        (c[28] & 255) |
        ((c[29] & 255) << 8) |
        ((c[30] & 255) << 16) |
        ((c[31] & 255) << 24);
    d =
        (d[12] & 255) |
        ((d[13] & 255) << 8) |
        ((d[14] & 255) << 16) |
        ((d[15] & 255) << 24);
    var r = e,
        s = f,
        t = g,
        u = h,
        v = i,
        w = j,
        x = k,
        y = l,
        z = m,
        A = b,
        B = n,
        C = o,
        D = p,
        E = q,
        F = c,
        G = d,
        H;
    for (var I = 0; I < 20; I += 2)
        (H = (r + D) | 0),
            (v ^= (H << 7) | (H >>> (32 - 7))),
            (H = (v + r) | 0),
            (z ^= (H << 9) | (H >>> (32 - 9))),
            (H = (z + v) | 0),
            (D ^= (H << 13) | (H >>> (32 - 13))),
            (H = (D + z) | 0),
            (r ^= (H << 18) | (H >>> (32 - 18))),
            (H = (w + s) | 0),
            (A ^= (H << 7) | (H >>> (32 - 7))),
            (H = (A + w) | 0),
            (E ^= (H << 9) | (H >>> (32 - 9))),
            (H = (E + A) | 0),
            (s ^= (H << 13) | (H >>> (32 - 13))),
            (H = (s + E) | 0),
            (w ^= (H << 18) | (H >>> (32 - 18))),
            (H = (B + x) | 0),
            (F ^= (H << 7) | (H >>> (32 - 7))),
            (H = (F + B) | 0),
            (t ^= (H << 9) | (H >>> (32 - 9))),
            (H = (t + F) | 0),
            (x ^= (H << 13) | (H >>> (32 - 13))),
            (H = (x + t) | 0),
            (B ^= (H << 18) | (H >>> (32 - 18))),
            (H = (G + C) | 0),
            (u ^= (H << 7) | (H >>> (32 - 7))),
            (H = (u + G) | 0),
            (y ^= (H << 9) | (H >>> (32 - 9))),
            (H = (y + u) | 0),
            (C ^= (H << 13) | (H >>> (32 - 13))),
            (H = (C + y) | 0),
            (G ^= (H << 18) | (H >>> (32 - 18))),
            (H = (r + u) | 0),
            (s ^= (H << 7) | (H >>> (32 - 7))),
            (H = (s + r) | 0),
            (t ^= (H << 9) | (H >>> (32 - 9))),
            (H = (t + s) | 0),
            (u ^= (H << 13) | (H >>> (32 - 13))),
            (H = (u + t) | 0),
            (r ^= (H << 18) | (H >>> (32 - 18))),
            (H = (w + v) | 0),
            (x ^= (H << 7) | (H >>> (32 - 7))),
            (H = (x + w) | 0),
            (y ^= (H << 9) | (H >>> (32 - 9))),
            (H = (y + x) | 0),
            (v ^= (H << 13) | (H >>> (32 - 13))),
            (H = (v + y) | 0),
            (w ^= (H << 18) | (H >>> (32 - 18))),
            (H = (B + A) | 0),
            (C ^= (H << 7) | (H >>> (32 - 7))),
            (H = (C + B) | 0),
            (z ^= (H << 9) | (H >>> (32 - 9))),
            (H = (z + C) | 0),
            (A ^= (H << 13) | (H >>> (32 - 13))),
            (H = (A + z) | 0),
            (B ^= (H << 18) | (H >>> (32 - 18))),
            (H = (G + F) | 0),
            (D ^= (H << 7) | (H >>> (32 - 7))),
            (H = (D + G) | 0),
            (E ^= (H << 9) | (H >>> (32 - 9))),
            (H = (E + D) | 0),
            (F ^= (H << 13) | (H >>> (32 - 13))),
            (H = (F + E) | 0),
            (G ^= (H << 18) | (H >>> (32 - 18)));
    r = (r + e) | 0;
    s = (s + f) | 0;
    t = (t + g) | 0;
    u = (u + h) | 0;
    v = (v + i) | 0;
    w = (w + j) | 0;
    x = (x + k) | 0;
    y = (y + l) | 0;
    z = (z + m) | 0;
    A = (A + b) | 0;
    B = (B + n) | 0;
    C = (C + o) | 0;
    D = (D + p) | 0;
    E = (E + q) | 0;
    F = (F + c) | 0;
    G = (G + d) | 0;
    a[0] = (r >>> 0) & 255;
    a[1] = (r >>> 8) & 255;
    a[2] = (r >>> 16) & 255;
    a[3] = (r >>> 24) & 255;
    a[4] = (s >>> 0) & 255;
    a[5] = (s >>> 8) & 255;
    a[6] = (s >>> 16) & 255;
    a[7] = (s >>> 24) & 255;
    a[8] = (t >>> 0) & 255;
    a[9] = (t >>> 8) & 255;
    a[10] = (t >>> 16) & 255;
    a[11] = (t >>> 24) & 255;
    a[12] = (u >>> 0) & 255;
    a[13] = (u >>> 8) & 255;
    a[14] = (u >>> 16) & 255;
    a[15] = (u >>> 24) & 255;
    a[16] = (v >>> 0) & 255;
    a[17] = (v >>> 8) & 255;
    a[18] = (v >>> 16) & 255;
    a[19] = (v >>> 24) & 255;
    a[20] = (w >>> 0) & 255;
    a[21] = (w >>> 8) & 255;
    a[22] = (w >>> 16) & 255;
    a[23] = (w >>> 24) & 255;
    a[24] = (x >>> 0) & 255;
    a[25] = (x >>> 8) & 255;
    a[26] = (x >>> 16) & 255;
    a[27] = (x >>> 24) & 255;
    a[28] = (y >>> 0) & 255;
    a[29] = (y >>> 8) & 255;
    a[30] = (y >>> 16) & 255;
    a[31] = (y >>> 24) & 255;
    a[32] = (z >>> 0) & 255;
    a[33] = (z >>> 8) & 255;
    a[34] = (z >>> 16) & 255;
    a[35] = (z >>> 24) & 255;
    a[36] = (A >>> 0) & 255;
    a[37] = (A >>> 8) & 255;
    a[38] = (A >>> 16) & 255;
    a[39] = (A >>> 24) & 255;
    a[40] = (B >>> 0) & 255;
    a[41] = (B >>> 8) & 255;
    a[42] = (B >>> 16) & 255;
    a[43] = (B >>> 24) & 255;
    a[44] = (C >>> 0) & 255;
    a[45] = (C >>> 8) & 255;
    a[46] = (C >>> 16) & 255;
    a[47] = (C >>> 24) & 255;
    a[48] = (D >>> 0) & 255;
    a[49] = (D >>> 8) & 255;
    a[50] = (D >>> 16) & 255;
    a[51] = (D >>> 24) & 255;
    a[52] = (E >>> 0) & 255;
    a[53] = (E >>> 8) & 255;
    a[54] = (E >>> 16) & 255;
    a[55] = (E >>> 24) & 255;
    a[56] = (F >>> 0) & 255;
    a[57] = (F >>> 8) & 255;
    a[58] = (F >>> 16) & 255;
    a[59] = (F >>> 24) & 255;
    a[60] = (G >>> 0) & 255;
    a[61] = (G >>> 8) & 255;
    a[62] = (G >>> 16) & 255;
    a[63] = (G >>> 24) & 255;
}


var h_uint8_values = {
    "0": 0,
    "1": 2,
    "2": 4,
    "3": 6,
    "4": 8,
    "5": 10,
    "6": 12,
    "7": 14,
    "8": 16,
    "9": 18,
    "10": 20,
    "11": 22,
    "12": 24,
    "13": 26,
    "14": 28,
    "15": 30,
    "16": 28,
    "17": 20,
    "18": 8,
    "19": 16,
    "20": 18,
    "21": 30,
    "22": 26,
    "23": 12,
    "24": 2,
    "25": 24,
    "26": 0,
    "27": 4,
    "28": 22,
    "29": 14,
    "30": 10,
    "31": 6,
    "32": 22,
    "33": 16,
    "34": 24,
    "35": 0,
    "36": 10,
    "37": 4,
    "38": 30,
    "39": 26,
    "40": 20,
    "41": 28,
    "42": 6,
    "43": 12,
    "44": 14,
    "45": 2,
    "46": 18,
    "47": 8,
    "48": 14,
    "49": 18,
    "50": 6,
    "51": 2,
    "52": 26,
    "53": 24,
    "54": 22,
    "55": 28,
    "56": 4,
    "57": 12,
    "58": 10,
    "59": 20,
    "60": 8,
    "61": 0,
    "62": 30,
    "63": 16,
    "64": 18,
    "65": 0,
    "66": 10,
    "67": 14,
    "68": 4,
    "69": 8,
    "70": 20,
    "71": 30,
    "72": 28,
    "73": 2,
    "74": 22,
    "75": 24,
    "76": 12,
    "77": 16,
    "78": 6,
    "79": 26,
    "80": 4,
    "81": 24,
    "82": 12,
    "83": 20,
    "84": 0,
    "85": 22,
    "86": 16,
    "87": 6,
    "88": 8,
    "89": 26,
    "90": 14,
    "91": 10,
    "92": 30,
    "93": 28,
    "94": 2,
    "95": 18,
    "96": 24,
    "97": 10,
    "98": 2,
    "99": 30,
    "100": 28,
    "101": 26,
    "102": 8,
    "103": 20,
    "104": 0,
    "105": 14,
    "106": 12,
    "107": 6,
    "108": 18,
    "109": 4,
    "110": 16,
    "111": 22,
    "112": 26,
    "113": 22,
    "114": 14,
    "115": 28,
    "116": 24,
    "117": 2,
    "118": 6,
    "119": 18,
    "120": 10,
    "121": 0,
    "122": 30,
    "123": 8,
    "124": 16,
    "125": 12,
    "126": 4,
    "127": 20,
    "128": 12,
    "129": 30,
    "130": 28,
    "131": 18,
    "132": 22,
    "133": 6,
    "134": 0,
    "135": 16,
    "136": 24,
    "137": 4,
    "138": 26,
    "139": 14,
    "140": 2,
    "141": 8,
    "142": 20,
    "143": 10,
    "144": 20,
    "145": 4,
    "146": 16,
    "147": 8,
    "148": 14,
    "149": 12,
    "150": 2,
    "151": 10,
    "152": 30,
    "153": 22,
    "154": 18,
    "155": 28,
    "156": 6,
    "157": 24,
    "158": 26,
    "159": 0,
    "160": 0,
    "161": 2,
    "162": 4,
    "163": 6,
    "164": 8,
    "165": 10,
    "166": 12,
    "167": 14,
    "168": 16,
    "169": 18,
    "170": 20,
    "171": 22,
    "172": 24,
    "173": 26,
    "174": 28,
    "175": 30,
    "176": 28,
    "177": 20,
    "178": 8,
    "179": 16,
    "180": 18,
    "181": 30,
    "182": 26,
    "183": 12,
    "184": 2,
    "185": 24,
    "186": 0,
    "187": 4,
    "188": 22,
    "189": 14,
    "190": 10,
    "191": 6
}

//var h = new Uint8Array([...Object.values(h_uint8_values)]);
//var i = new Uint32Array(32), l = new Uint32Array(32)

function c(a, b, c, d) {
    var e = a[b] + c;
    c < 0 && (e += 4294967296);
    c = a[b + 1] + d;
    e >= 4294967296 && c++;
    a[b] = e;
    a[b + 1] = c;
}


function G(a) {
    var b,
        c,
        d = 1;
    for (b = 0; b < 16; b++)
        (c = a[b] + d + 65535),
            (d = Math.floor(c / 65536)),
            (a[b] = c - d * 65536);
    a[0] += d - 1 + 37 * (d - 1);
}


function I(a, c) {
    var d,
        e,
        f = b(),
        g = b();
    for (d = 0; d < 16; d++) g[d] = c[d];
    G(g);
    G(g);
    G(g);
    for (c = 0; c < 2; c++) {
        f[0] = g[0] - 65517;
        for (d = 1; d < 15; d++)
            (f[d] = g[d] - 65535 - ((f[d - 1] >> 16) & 1)), (f[d - 1] &= 65535);
        f[15] = g[15] - 32767 - ((f[14] >> 16) & 1);
        e = (f[15] >> 16) & 1;
        f[14] &= 65535;
        H(g, f, 1 - e);
    }
    for (d = 0; d < 16; d++)
        (a[2 * d] = g[d] & 255), (a[2 * d + 1] = g[d] >> 8);
}

function s(a, b, c, d) {
    var e =
            (d[0] & 255) |
            ((d[1] & 255) << 8) |
            ((d[2] & 255) << 16) |
            ((d[3] & 255) << 24),
        f =
            (c[0] & 255) |
            ((c[1] & 255) << 8) |
            ((c[2] & 255) << 16) |
            ((c[3] & 255) << 24),
        g =
            (c[4] & 255) |
            ((c[5] & 255) << 8) |
            ((c[6] & 255) << 16) |
            ((c[7] & 255) << 24),
        h =
            (c[8] & 255) |
            ((c[9] & 255) << 8) |
            ((c[10] & 255) << 16) |
            ((c[11] & 255) << 24),
        i =
            (c[12] & 255) |
            ((c[13] & 255) << 8) |
            ((c[14] & 255) << 16) |
            ((c[15] & 255) << 24),
        j =
            (d[4] & 255) |
            ((d[5] & 255) << 8) |
            ((d[6] & 255) << 16) |
            ((d[7] & 255) << 24),
        k =
            (b[0] & 255) |
            ((b[1] & 255) << 8) |
            ((b[2] & 255) << 16) |
            ((b[3] & 255) << 24),
        l =
            (b[4] & 255) |
            ((b[5] & 255) << 8) |
            ((b[6] & 255) << 16) |
            ((b[7] & 255) << 24),
        m =
            (b[8] & 255) |
            ((b[9] & 255) << 8) |
            ((b[10] & 255) << 16) |
            ((b[11] & 255) << 24);
    b =
        (b[12] & 255) |
        ((b[13] & 255) << 8) |
        ((b[14] & 255) << 16) |
        ((b[15] & 255) << 24);
    var n =
            (d[8] & 255) |
            ((d[9] & 255) << 8) |
            ((d[10] & 255) << 16) |
            ((d[11] & 255) << 24),
        o =
            (c[16] & 255) |
            ((c[17] & 255) << 8) |
            ((c[18] & 255) << 16) |
            ((c[19] & 255) << 24),
        p =
            (c[20] & 255) |
            ((c[21] & 255) << 8) |
            ((c[22] & 255) << 16) |
            ((c[23] & 255) << 24),
        q =
            (c[24] & 255) |
            ((c[25] & 255) << 8) |
            ((c[26] & 255) << 16) |
            ((c[27] & 255) << 24);
    c =
        (c[28] & 255) |
        ((c[29] & 255) << 8) |
        ((c[30] & 255) << 16) |
        ((c[31] & 255) << 24);
    d =
        (d[12] & 255) |
        ((d[13] & 255) << 8) |
        ((d[14] & 255) << 16) |
        ((d[15] & 255) << 24);
    e = e;
    f = f;
    g = g;
    h = h;
    i = i;
    j = j;
    k = k;
    l = l;
    m = m;
    b = b;
    n = n;
    o = o;
    p = p;
    q = q;
    c = c;
    d = d;
    var r;
    for (var s = 0; s < 20; s += 2)
        (r = (e + p) | 0),
            (i ^= (r << 7) | (r >>> (32 - 7))),
            (r = (i + e) | 0),
            (m ^= (r << 9) | (r >>> (32 - 9))),
            (r = (m + i) | 0),
            (p ^= (r << 13) | (r >>> (32 - 13))),
            (r = (p + m) | 0),
            (e ^= (r << 18) | (r >>> (32 - 18))),
            (r = (j + f) | 0),
            (b ^= (r << 7) | (r >>> (32 - 7))),
            (r = (b + j) | 0),
            (q ^= (r << 9) | (r >>> (32 - 9))),
            (r = (q + b) | 0),
            (f ^= (r << 13) | (r >>> (32 - 13))),
            (r = (f + q) | 0),
            (j ^= (r << 18) | (r >>> (32 - 18))),
            (r = (n + k) | 0),
            (c ^= (r << 7) | (r >>> (32 - 7))),
            (r = (c + n) | 0),
            (g ^= (r << 9) | (r >>> (32 - 9))),
            (r = (g + c) | 0),
            (k ^= (r << 13) | (r >>> (32 - 13))),
            (r = (k + g) | 0),
            (n ^= (r << 18) | (r >>> (32 - 18))),
            (r = (d + o) | 0),
            (h ^= (r << 7) | (r >>> (32 - 7))),
            (r = (h + d) | 0),
            (l ^= (r << 9) | (r >>> (32 - 9))),
            (r = (l + h) | 0),
            (o ^= (r << 13) | (r >>> (32 - 13))),
            (r = (o + l) | 0),
            (d ^= (r << 18) | (r >>> (32 - 18))),
            (r = (e + h) | 0),
            (f ^= (r << 7) | (r >>> (32 - 7))),
            (r = (f + e) | 0),
            (g ^= (r << 9) | (r >>> (32 - 9))),
            (r = (g + f) | 0),
            (h ^= (r << 13) | (r >>> (32 - 13))),
            (r = (h + g) | 0),
            (e ^= (r << 18) | (r >>> (32 - 18))),
            (r = (j + i) | 0),
            (k ^= (r << 7) | (r >>> (32 - 7))),
            (r = (k + j) | 0),
            (l ^= (r << 9) | (r >>> (32 - 9))),
            (r = (l + k) | 0),
            (i ^= (r << 13) | (r >>> (32 - 13))),
            (r = (i + l) | 0),
            (j ^= (r << 18) | (r >>> (32 - 18))),
            (r = (n + b) | 0),
            (o ^= (r << 7) | (r >>> (32 - 7))),
            (r = (o + n) | 0),
            (m ^= (r << 9) | (r >>> (32 - 9))),
            (r = (m + o) | 0),
            (b ^= (r << 13) | (r >>> (32 - 13))),
            (r = (b + m) | 0),
            (n ^= (r << 18) | (r >>> (32 - 18))),
            (r = (d + c) | 0),
            (p ^= (r << 7) | (r >>> (32 - 7))),
            (r = (p + d) | 0),
            (q ^= (r << 9) | (r >>> (32 - 9))),
            (r = (q + p) | 0),
            (c ^= (r << 13) | (r >>> (32 - 13))),
            (r = (c + q) | 0),
            (d ^= (r << 18) | (r >>> (32 - 18)));
    a[0] = (e >>> 0) & 255;
    a[1] = (e >>> 8) & 255;
    a[2] = (e >>> 16) & 255;
    a[3] = (e >>> 24) & 255;
    a[4] = (j >>> 0) & 255;
    a[5] = (j >>> 8) & 255;
    a[6] = (j >>> 16) & 255;
    a[7] = (j >>> 24) & 255;
    a[8] = (n >>> 0) & 255;
    a[9] = (n >>> 8) & 255;
    a[10] = (n >>> 16) & 255;
    a[11] = (n >>> 24) & 255;
    a[12] = (d >>> 0) & 255;
    a[13] = (d >>> 8) & 255;
    a[14] = (d >>> 16) & 255;
    a[15] = (d >>> 24) & 255;
    a[16] = (k >>> 0) & 255;
    a[17] = (k >>> 8) & 255;
    a[18] = (k >>> 16) & 255;
    a[19] = (k >>> 24) & 255;
    a[20] = (l >>> 0) & 255;
    a[21] = (l >>> 8) & 255;
    a[22] = (l >>> 16) & 255;
    a[23] = (l >>> 24) & 255;
    a[24] = (m >>> 0) & 255;
    a[25] = (m >>> 8) & 255;
    a[26] = (m >>> 16) & 255;
    a[27] = (m >>> 24) & 255;
    a[28] = (b >>> 0) & 255;
    a[29] = (b >>> 8) & 255;
    a[30] = (b >>> 16) & 255;
    a[31] = (b >>> 24) & 255;
}

var uint32_values = {
    "0": 4089235720,
    "1": 1779033703,
    "2": 2227873595,
    "3": 3144134277,
    "4": 4271175723,
    "5": 1013904242,
    "6": 1595750129,
    "7": 2773480762,
    "8": 2917565137,
    "9": 1359893119,
    "10": 725511199,
    "11": 2600822924,
    "12": 4215389547,
    "13": 528734635,
    "14": 327033209,
    "15": 1541459225
}
var f2 = new Uint32Array([...Object.values(uint32_values)]);
var f3 = new Float64Array(16);

function O(a, b, c) {
    var d,
        e = 0,
        f = 0,
        g = 0,
        h = 0,
        i = 0,
        j = 0,
        k = 0,
        l = 0,
        m = 0,
        n = 0,
        o = 0,
        p = 0,
        q = 0,
        r = 0,
        s = 0,
        t = 0,
        u = 0,
        v = 0,
        w = 0,
        x = 0,
        y = 0,
        z = 0,
        A = 0,
        B = 0,
        C = 0,
        D = 0,
        E = 0,
        F = 0,
        G = 0,
        H = 0,
        I = 0,
        J = c[0],
        K = c[1],
        L = c[2],
        M = c[3],
        N = c[4],
        O = c[5],
        P = c[6],
        Q = c[7],
        R = c[8],
        S = c[9],
        T = c[10],
        U = c[11],
        V = c[12],
        W = c[13],
        X = c[14];
    c = c[15];
    d = b[0];
    e += d * J;
    f += d * K;
    g += d * L;
    h += d * M;
    i += d * N;
    j += d * O;
    k += d * P;
    l += d * Q;
    m += d * R;
    n += d * S;
    o += d * T;
    p += d * U;
    q += d * V;
    r += d * W;
    s += d * X;
    t += d * c;
    d = b[1];
    f += d * J;
    g += d * K;
    h += d * L;
    i += d * M;
    j += d * N;
    k += d * O;
    l += d * P;
    m += d * Q;
    n += d * R;
    o += d * S;
    p += d * T;
    q += d * U;
    r += d * V;
    s += d * W;
    t += d * X;
    u += d * c;
    d = b[2];
    g += d * J;
    h += d * K;
    i += d * L;
    j += d * M;
    k += d * N;
    l += d * O;
    m += d * P;
    n += d * Q;
    o += d * R;
    p += d * S;
    q += d * T;
    r += d * U;
    s += d * V;
    t += d * W;
    u += d * X;
    v += d * c;
    d = b[3];
    h += d * J;
    i += d * K;
    j += d * L;
    k += d * M;
    l += d * N;
    m += d * O;
    n += d * P;
    o += d * Q;
    p += d * R;
    q += d * S;
    r += d * T;
    s += d * U;
    t += d * V;
    u += d * W;
    v += d * X;
    w += d * c;
    d = b[4];
    i += d * J;
    j += d * K;
    k += d * L;
    l += d * M;
    m += d * N;
    n += d * O;
    o += d * P;
    p += d * Q;
    q += d * R;
    r += d * S;
    s += d * T;
    t += d * U;
    u += d * V;
    v += d * W;
    w += d * X;
    x += d * c;
    d = b[5];
    j += d * J;
    k += d * K;
    l += d * L;
    m += d * M;
    n += d * N;
    o += d * O;
    p += d * P;
    q += d * Q;
    r += d * R;
    s += d * S;
    t += d * T;
    u += d * U;
    v += d * V;
    w += d * W;
    x += d * X;
    y += d * c;
    d = b[6];
    k += d * J;
    l += d * K;
    m += d * L;
    n += d * M;
    o += d * N;
    p += d * O;
    q += d * P;
    r += d * Q;
    s += d * R;
    t += d * S;
    u += d * T;
    v += d * U;
    w += d * V;
    x += d * W;
    y += d * X;
    z += d * c;
    d = b[7];
    l += d * J;
    m += d * K;
    n += d * L;
    o += d * M;
    p += d * N;
    q += d * O;
    r += d * P;
    s += d * Q;
    t += d * R;
    u += d * S;
    v += d * T;
    w += d * U;
    x += d * V;
    y += d * W;
    z += d * X;
    A += d * c;
    d = b[8];
    m += d * J;
    n += d * K;
    o += d * L;
    p += d * M;
    q += d * N;
    r += d * O;
    s += d * P;
    t += d * Q;
    u += d * R;
    v += d * S;
    w += d * T;
    x += d * U;
    y += d * V;
    z += d * W;
    A += d * X;
    B += d * c;
    d = b[9];
    n += d * J;
    o += d * K;
    p += d * L;
    q += d * M;
    r += d * N;
    s += d * O;
    t += d * P;
    u += d * Q;
    v += d * R;
    w += d * S;
    x += d * T;
    y += d * U;
    z += d * V;
    A += d * W;
    B += d * X;
    C += d * c;
    d = b[10];
    o += d * J;
    p += d * K;
    q += d * L;
    r += d * M;
    s += d * N;
    t += d * O;
    u += d * P;
    v += d * Q;
    w += d * R;
    x += d * S;
    y += d * T;
    z += d * U;
    A += d * V;
    B += d * W;
    C += d * X;
    D += d * c;
    d = b[11];
    p += d * J;
    q += d * K;
    r += d * L;
    s += d * M;
    t += d * N;
    u += d * O;
    v += d * P;
    w += d * Q;
    x += d * R;
    y += d * S;
    z += d * T;
    A += d * U;
    B += d * V;
    C += d * W;
    D += d * X;
    E += d * c;
    d = b[12];
    q += d * J;
    r += d * K;
    s += d * L;
    t += d * M;
    u += d * N;
    v += d * O;
    w += d * P;
    x += d * Q;
    y += d * R;
    z += d * S;
    A += d * T;
    B += d * U;
    C += d * V;
    D += d * W;
    E += d * X;
    F += d * c;
    d = b[13];
    r += d * J;
    s += d * K;
    t += d * L;
    u += d * M;
    v += d * N;
    w += d * O;
    x += d * P;
    y += d * Q;
    z += d * R;
    A += d * S;
    B += d * T;
    C += d * U;
    D += d * V;
    E += d * W;
    F += d * X;
    G += d * c;
    d = b[14];
    s += d * J;
    t += d * K;
    u += d * L;
    v += d * M;
    w += d * N;
    x += d * O;
    y += d * P;
    z += d * Q;
    A += d * R;
    B += d * S;
    C += d * T;
    D += d * U;
    E += d * V;
    F += d * W;
    G += d * X;
    H += d * c;
    d = b[15];
    t += d * J;
    u += d * K;
    v += d * L;
    w += d * M;
    x += d * N;
    y += d * O;
    z += d * P;
    A += d * Q;
    B += d * R;
    C += d * S;
    D += d * T;
    E += d * U;
    F += d * V;
    G += d * W;
    H += d * X;
    I += d * c;
    e += 38 * u;
    f += 38 * v;
    g += 38 * w;
    h += 38 * x;
    i += 38 * y;
    j += 38 * z;
    k += 38 * A;
    l += 38 * B;
    m += 38 * C;
    n += 38 * D;
    o += 38 * E;
    p += 38 * F;
    q += 38 * G;
    r += 38 * H;
    s += 38 * I;
    b = 1;
    d = e + b + 65535;
    b = Math.floor(d / 65536);
    e = d - b * 65536;
    d = f + b + 65535;
    b = Math.floor(d / 65536);
    f = d - b * 65536;
    d = g + b + 65535;
    b = Math.floor(d / 65536);
    g = d - b * 65536;
    d = h + b + 65535;
    b = Math.floor(d / 65536);
    h = d - b * 65536;
    d = i + b + 65535;
    b = Math.floor(d / 65536);
    i = d - b * 65536;
    d = j + b + 65535;
    b = Math.floor(d / 65536);
    j = d - b * 65536;
    d = k + b + 65535;
    b = Math.floor(d / 65536);
    k = d - b * 65536;
    d = l + b + 65535;
    b = Math.floor(d / 65536);
    l = d - b * 65536;
    d = m + b + 65535;
    b = Math.floor(d / 65536);
    m = d - b * 65536;
    d = n + b + 65535;
    b = Math.floor(d / 65536);
    n = d - b * 65536;
    d = o + b + 65535;
    b = Math.floor(d / 65536);
    o = d - b * 65536;
    d = p + b + 65535;
    b = Math.floor(d / 65536);
    p = d - b * 65536;
    d = q + b + 65535;
    b = Math.floor(d / 65536);
    q = d - b * 65536;
    d = r + b + 65535;
    b = Math.floor(d / 65536);
    r = d - b * 65536;
    d = s + b + 65535;
    b = Math.floor(d / 65536);
    s = d - b * 65536;
    d = t + b + 65535;
    b = Math.floor(d / 65536);
    t = d - b * 65536;
    e += b - 1 + 37 * (b - 1);
    b = 1;
    d = e + b + 65535;
    b = Math.floor(d / 65536);
    e = d - b * 65536;
    d = f + b + 65535;
    b = Math.floor(d / 65536);
    f = d - b * 65536;
    d = g + b + 65535;
    b = Math.floor(d / 65536);
    g = d - b * 65536;
    d = h + b + 65535;
    b = Math.floor(d / 65536);
    h = d - b * 65536;
    d = i + b + 65535;
    b = Math.floor(d / 65536);
    i = d - b * 65536;
    d = j + b + 65535;
    b = Math.floor(d / 65536);
    j = d - b * 65536;
    d = k + b + 65535;
    b = Math.floor(d / 65536);
    k = d - b * 65536;
    d = l + b + 65535;
    b = Math.floor(d / 65536);
    l = d - b * 65536;
    d = m + b + 65535;
    b = Math.floor(d / 65536);
    m = d - b * 65536;
    d = n + b + 65535;
    b = Math.floor(d / 65536);
    n = d - b * 65536;
    d = o + b + 65535;
    b = Math.floor(d / 65536);
    o = d - b * 65536;
    d = p + b + 65535;
    b = Math.floor(d / 65536);
    p = d - b * 65536;
    d = q + b + 65535;
    b = Math.floor(d / 65536);
    q = d - b * 65536;
    d = r + b + 65535;
    b = Math.floor(d / 65536);
    r = d - b * 65536;
    d = s + b + 65535;
    b = Math.floor(d / 65536);
    s = d - b * 65536;
    d = t + b + 65535;
    b = Math.floor(d / 65536);
    t = d - b * 65536;
    e += b - 1 + 37 * (b - 1);
    a[0] = e;
    a[1] = f;
    a[2] = g;
    a[3] = h;
    a[4] = i;
    a[5] = j;
    a[6] = k;
    a[7] = l;
    a[8] = m;
    a[9] = n;
    a[10] = o;
    a[11] = p;
    a[12] = q;
    a[13] = r;
    a[14] = s;
    a[15] = t;
}

function Q(a, c) {
    var d = b(),
        e;
    for (e = 0; e < 16; e++) d[e] = c[e];
    for (e = 253; e >= 0; e--) P(d, d), e !== 2 && e !== 4 && O(d, d, c);
    for (e = 0; e < 16; e++) a[e] = d[e];
}

function H(a, b, c) {
    var d;
    c = ~(c - 1);
    for (var e = 0; e < 16; e++)
        (d = c & (a[e] ^ b[e])), (a[e] ^= d), (b[e] ^= d);
}

function P(a, b) {
    O(a, b, b);
}

function M(a, b, c) {
    for (var d = 0; d < 16; d++) a[d] = b[d] + c[d];
}

function N(a, b, c) {
    for (var d = 0; d < 16; d++) a[d] = b[d] - c[d];
}

function L(a, b) {
    var c;
    for (c = 0; c < 16; c++) a[c] = b[2 * c] + (b[2 * c + 1] << 8);
    a[15] &= 32767;
}

//var g = b([1])
//var h = b([56129, 1])
//var i = b([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995])
//var j = b([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222])
//var k = b([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553])
//var l = b([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214])

function S(a, c, d) {
    var h = new Float64Array(16), i = true;
    h[0] = 56129;
    h[1] = 1;

    var e = new Uint8Array(32),
        f = new Float64Array(80),
        g,
        i = b(),
        j = b(),
        k = b(),
        l = b(),
        m = b(),
        n = b();
    for (g = 0; g < 31; g++) e[g] = c[g];
    e[31] = (c[31] & 127) | 64;
    e[0] &= 248;
    L(f, d);
    for (g = 0; g < 16; g++) (j[g] = f[g]), (l[g] = i[g] = k[g] = 0);
    i[0] = l[0] = 1;
    for (g = 254; g >= 0; --g)
        (c = (e[g >>> 3] >>> (g & 7)) & 1),
            H(i, j, c),
            H(k, l, c),
            M(m, i, k),
            N(i, i, k),
            M(k, j, l),
            N(j, j, l),
            P(l, m),
            P(n, i),
            O(i, k, i),
            O(k, j, m),
            M(m, i, k),
            N(i, i, k),
            P(j, i),
            N(k, l, n),
            O(i, k, h),
            M(i, i, l),
            O(k, k, i),
            O(i, l, n),
            O(l, j, f),
            P(j, m),
            H(i, j, c),
            H(k, l, c);
    for (g = 0; g < 16; g++)
        (f[g + 16] = i[g]),
            (f[g + 32] = k[g]),
            (f[g + 48] = j[g]),
            (f[g + 64] = l[g]);
    d = f.subarray(32);
    c = f.subarray(16);
    Q(d, d);
    O(c, c, d);
    I(a, c);
    return 0;
}

function d(a, b) {
    return a[b] ^ (a[b + 1] << 8) ^ (a[b + 2] << 16) ^ (a[b + 3] << 24);
}

function e(a, d, e, f, g, h) {
    var j = l2[g];
    g = l2[g + 1];
    var k = l2[h];
    h = l2[h + 1];
    b2(i2, a, d);
    c(i2, a, j, g);
    j = i2[f] ^ i2[a];
    g = i2[f + 1] ^ i2[a + 1];
    i2[f] = g;
    i2[f + 1] = j;
    b2(i2, e, f);
    j = i2[d] ^ i2[e];
    g = i2[d + 1] ^ i2[e + 1];
    i2[d] = (j >>> 24) ^ (g << 8);
    i2[d + 1] = (g >>> 24) ^ (j << 8);
    b2(i2, a, d);
    c(i2, a, k, h);
    j = i2[f] ^ i2[a];
    g = i2[f + 1] ^ i2[a + 1];
    i2[f] = (j >>> 16) ^ (g << 16);
    i2[f + 1] = (g >>> 16) ^ (j << 16);
    b2(i2, e, f);
    j = i2[d] ^ i2[e];
    g = i2[d + 1] ^ i2[e + 1];
    i2[d] = (g >>> 31) ^ (j << 1);
    i2[d + 1] = (j >>> 31) ^ (g << 1);
}

var i2 = new Uint32Array(32);
var l2 = new Uint32Array(32);
var h = new Uint8Array([...Object.values(h_uint8_values)]);

function m(a, b) {
    var c = 0;
    for (c = 0; c < 16; c++) (i2[c] = a.h[c]), (i2[c + 16] = f2[c]);
    i2[24] = i2[24] ^ a.t;
    i2[25] = i2[25] ^ (a.t / 4294967296);
    b && ((i2[28] = ~i2[28]), (i2[29] = ~i2[29]));
    for (c = 0; c < 32; c++) l2[c] = d(a.b, 4 * c);
    for (c = 0; c < 12; c++)
        e(0, 8, 16, 24, h[c * 16 + 0], h[c * 16 + 1]),
            e(2, 10, 18, 26, h[c * 16 + 2], h[c * 16 + 3]),
            e(4, 12, 20, 28, h[c * 16 + 4], h[c * 16 + 5]),
            e(6, 14, 22, 30, h[c * 16 + 6], h[c * 16 + 7]),
            e(0, 10, 20, 30, h[c * 16 + 8], h[c * 16 + 9]),
            e(2, 12, 22, 24, h[c * 16 + 10], h[c * 16 + 11]),
            e(4, 14, 16, 26, h[c * 16 + 12], h[c * 16 + 13]),
            e(6, 8, 18, 28, h[c * 16 + 14], h[c * 16 + 15]);
    for (c = 0; c < 16; c++) a.h[c] = a.h[c] ^ i2[c] ^ i2[c + 16];
}


function blake2bInit(a, b) {
    if (a === 0 || a > 64)
        throw new Error('Illegal output length, expected 0 < length <= 64');
    if (b && b.length > 64)
        throw new Error(
            'Illegal key, expected Uint8Array with 0 < length <= 64'
        );
    var c = {
        b: new Uint8Array(128),
        h: new Uint32Array(16),
        t: 0,
        c: 0,
        outlen: a,
    };
    for (var d = 0; d < 16; d++) c.h[d] = f2[d];
    d = b ? b.length : 0;
    c.h[0] ^= 16842752 ^ (d << 8) ^ a;
    b && (o(c, b), (c.c = 128));
    return c;
}

function blake2bUpdate(a, b) {
    for (var c = 0; c < b.length; c++)
        a.c === 128 && ((a.t += a.c), m(a, !1), (a.c = 0)), (a.b[a.c++] = b[c]);
}

function blake2bFinal(a) {
    a.t += a.c;
    while (a.c < 128) a.b[a.c++] = 0;
    m(a, !0);
    var b = new Uint8Array(a.outlen);
    for (var c = 0; c < a.outlen; c++) b[c] = a.h[c >> 2] >> (8 * (c & 3));
    return b;
}

function FAObject(a, b) {
    var c = blake2bInit(24, null)
    blake2bUpdate(c, a);
    blake2bUpdate(c, b);
    return blake2bFinal(c)
}

function $() {
    for (var a = 0; a < arguments.length; a++)
        if (!(arguments[a] instanceof Uint8Array))
            throw new TypeError('unexpected type, use Uint8Array');
}

function Ha(a, b) {
    if (a.length !== 32) throw new Error('bad public key size');
    if (b.length !== 32) throw new Error('bad secret key size');
}

function u(a, b, c, d) {
    s(a, b, c, d);
}

function V(a, b, c) {
    var e = new Uint8Array(32);
    S(e, c, b);
    return u(a, d, e, v);
}


function boxBefore(a, b) {
    $(a, b);
    Ha(a, b);
    var c = new Uint8Array(32);
    V(c, a, b);
    return c
}

function Asecretbox(a, b, c) {
    $(a, b, c);
    Ga(c, b);
    var d = new Uint8Array(32 + a.length),
        e = new Uint8Array(d.length);
    for (var f = 0; f < a.length; f++) d[f + 32] = a[f];
    D(e, d, d.length, b, c);
    return e.subarray(16)
}

function z(a, b, c, d, e, f, g) {
    var h = new Uint8Array(32);
    u(h, f, g, v);
    g = new Uint8Array(8);
    for (var i = 0; i < 8; i++) g[i] = f[i + 16];
    return w(a, b, c, d, e, g, h);
}

function t(a, b, c, d) {
    r(a, b, c, d);
}


function w(a, b, c, d, e, f, g) {
    var h = new Uint8Array(16),
        i = new Uint8Array(64),
        j;
    for (j = 0; j < 16; j++) h[j] = 0;
    for (j = 0; j < 8; j++) h[j] = f[j];
    while (e >= 64) {
        t(i, h, g, v);
        for (j = 0; j < 64; j++) a[b + j] = c[d + j] ^ i[j];
        f = 1;
        for (j = 8; j < 16; j++)
            (f = (f + (h[j] & 255)) | 0), (h[j] = f & 255), (f >>>= 8);
        e -= 64;
        b += 64;
        d += 64;
    }
    if (e > 0) {
        t(i, h, g, v);
        for (j = 0; j < e; j++) a[b + j] = c[d + j] ^ i[j];
    }
    return 0;
}


function B(a, b, c, d, e, f) {
    f = new A(f);
    f.update(c, d, e);
    f.finish(a, b);
    return 0;
}


function D(a, b, c, d, e) {
    if (c < 32) return -1;
    z(a, 0, b, 0, c, d, e);
    B(a, 16, a, 32, c - 32, a);
    for (b = 0; b < 16; b++) a[b] = 0;
    return 0;
}


function Ga(a, b) {
    if (a.length !== 32) throw new Error("bad key size");
    if (b.length !== 24) throw new Error("bad nonce size");
}

function DABox(b, c, d, e) {
    d = boxBefore(d, e);
    return Asecretbox(b, c, d)
}

function boxKeyPair() {
    var e = new Uint8Array(32);
    e[0] = 9;

    function Ia(a) {
        for (var b = 0; b < a.length; b++)
            a[b] = 0
    }
    var getRandomValues = function (buf) {
        if (!(buf instanceof Uint8Array)) {
            throw new TypeError("Expected input to be an Uint8Array");
        }
        var bytes = cryptojs.randomBytes(buf.length);
        buf.set(bytes);
    };

    var U = function(a, b) {
        var c = function(a, d) {
            var c = 65536;
            var e, f = new Uint8Array(d);
            for (e = 0; e < d; e += c)
                cryptojs.getRandomValues(f.subarray(e, e + Math.min(d - e, c)));
            for (e = 0; e < d; e++)
                a[e] = f[e];
            Ia(f)
        };

        c(b, 32)
        return S(a, b, e)
    }
    var a = new Uint8Array(32), b = new Uint8Array(32);
    U(a, b)
    return {
        publicKey: a,
        secretKey: b
    }
}

async function formatEncryptedPassword(a, d, e, f) {
    var p = 16, o = 32, j = 64, k = 1, l = 1, n = 2, m = 1, q = 100, h;
    var s = function(a) {
        var b = [];

        for (var c = 0; c < a.length; c += 2)
            b.push(parseInt(a.slice(c, c + 2), 16));
        return new Uint8Array(b)
    };
    function h_a(a) {
        for (var b = 0; b < a.length; b++) a[b] = 0;
    }

    var r = function(a, b) {
        var c = new Uint8Array(48 + a.length), e = boxKeyPair();
        c.set(e.publicKey);
        var i = Object(FAObject)(e.publicKey, b);
        a = DABox(a, i, b, e.secretKey);
        c.set(a, e.publicKey.length);
        Object(h_a)(e.secretKey);
        return c
    }
    var g = q + e.length;
    if (d.length != j)
        throw new Error('public key is not a valid hex string');
    var t = s(d);
    if (!t)
        throw new Error('public key is not a valid hex string');

    var u = new Uint8Array(g), v = 0;
    u[v] = k;
    v += l;c
    u[v] = a;
    v += m;
    d = {
        name: 'AES-GCM',
        length: o * 8
    };
    var w = {
        name: 'AES-GCM',
        iv: new Uint8Array(12),
        additionalData: f,
        tagLen: p
    };
    return crypto.subtle.generateKey(d, !0, ['encrypt', 'decrypt']).then(function (a) {
        var c = crypto.subtle.exportKey('raw', a);
        a = crypto.subtle.encrypt(w, a, e.buffer);
        return (h || (h = Promise)).all([c, a])
    }).then(function (a) {
        var b = new Uint8Array(a[0]);
        b = r(b, t);
        u[v] = b.length & 255;
        u[v + 1] = b.length >> 8 & 255;
        v += n;
        u.set(b, v);
        v += o;
        v += 48;

        if (b.length !== o + 48)
            throw new Error('encrypted jey is the wrong length');
        b = new Uint8Array(a[1])
        a = b.slice(-p);
        b = b.slice(0, -p);
        u.set(a, v);
        v += p;
        u.set(b, v);
        return u
    }).catch(function (a) {
        throw a
    })
}

function encryptPassword(
    keyid, 
    publickey,
    password,
    timestamp, 
    encryptversion, 
    pwdtag='#PWD_INSTAGRAM_BROWSER'
) {
    password = stringDecodeUTF8(password);
    var encodedtimestamp = stringDecodeUTF8(timestamp);
    return formatEncryptedPassword(keyid, publickey, password, encodedtimestamp).then(function (a) {
        return [pwdtag, encryptversion, timestamp, encodeBase64(a)].join(':')
    })
}

var enckeyids = parseInt(process.argv[2]);
var encpublickey = process.argv[3];
var password = process.argv[4];
var timestamp = process.argv[5];
var encversion = parseInt(process.argv[6]);

var encryption = encryptPassword(
    enckeyids, 
    encpublickey,
    password,
    timestamp,
    encversion
)

var result = encryption.then((a) => console.log(a))
//console.log(result)
